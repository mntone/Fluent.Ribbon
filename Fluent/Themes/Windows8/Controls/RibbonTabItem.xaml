<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
					xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:Fluent="clr-namespace:Fluent"
					xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
					xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
					mc:Ignorable="d">
	<Style x:Key="RibbonTabItemStyle"
		   TargetType="{x:Type Fluent:RibbonTabItem}">
		<Style.Triggers>
			<Trigger Property="Group"
					 Value="{x:Null}">
				<Setter Property="BorderBrush"
						Value="{DynamicResource RibbonTopBorderBrush}" />
			</Trigger>
			<Trigger Property="Selector.IsSelected"
					 Value="False">
				<Setter Property="Foreground"
						Value="{DynamicResource TabItemFontBrush}" />
			</Trigger>
		</Style.Triggers>
		<Setter Property="HorizontalAlignment"
				Value="Left" />
		<Setter Property="VerticalAlignment"
				Value="Stretch" />
		<Setter Property="IsMinimized"
				Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsMinimized, Mode=OneWay, FallbackValue=False}" />
		<Setter Property="IsOpen"
				Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Fluent:RibbonTabControl}}, Path=IsDropDownOpen, Mode=OneWay, FallbackValue=True}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Fluent:RibbonTabItem}">
					<Grid x:Name="grid">
						<!-- This is some margin for contextual tabs? -->
						<Border x:Name="border3"
								Margin="0,0,0,1"
								BorderThickness="1,0"
								Grid.ColumnSpan="2">
							<!-- This is the gradient for contextual tabs thar are not selected
                                 BorderBrush="{Binding Group.BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"
                            -->
							<Border x:Name="border4"
									Margin="-1,0,0,0"
									BorderBrush="LightGray"
									BorderThickness="1,0">
								<Border.OpacityMask>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<GradientStop Color="Black"
													  Offset="0" />
										<GradientStop Color="#00000000"
													  Offset="0.8" />
									</LinearGradientBrush>
								</Border.OpacityMask>
								<Border x:Name="border5"
										Background="White"
										BorderThickness="0"
										Margin="0">
									<Border.OpacityMask>
										<LinearGradientBrush EndPoint="0.5,1"
															 StartPoint="0.5,0">
											<GradientStop Color="#59000000"
														  Offset="0" />
											<GradientStop Color="#00000000"
														  Offset="1" />
										</LinearGradientBrush>
									</Border.OpacityMask>
									<Rectangle x:Name="rectangle4"
											   Fill="#3FD2D2D2"
											   StrokeThickness="0">
										<Rectangle.OpacityMask>
											<LinearGradientBrush EndPoint="0.5,1"
																 StartPoint="0.5,0">
												<GradientStop Color="#7F000000"
															  Offset="0" />
												<GradientStop Color="#00000000"
															  Offset="1" />
											</LinearGradientBrush>
										</Rectangle.OpacityMask>
									</Rectangle>
								</Border>
							</Border>
						</Border>
						<Border x:Name="selectedGrid"
								Margin="0,0,1,0"
								Visibility="Collapsed"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness=".99,.99,.99,0"
								Background="{DynamicResource TabSelectedBackgroundBrush}" />
						<Border x:Name="hoverGrid"
								Margin="0,0,1,1"
								Visibility="Collapsed"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness=".99,.99,.99,0"
								Background="{DynamicResource TabMouseOverBackgroundBrush}" />
						<Border x:Name="focusedGrid"
								Margin="3,0,1,1"
								Visibility="Collapsed"
								BorderBrush="{DynamicResource ButtonHoverBorderBrush}"
								BorderThickness=".99,.99,.99,0" />
						<Border x:Name="PART_ContentContainer"
								HorizontalAlignment="Stretch"
								Margin="13,2,13,0"
								VerticalAlignment="Stretch"
								Padding="15,0,0,0"
								Grid.ColumnSpan="1">
							<!--<ContentPresenter x:Name="contentPresenter" ContentSource="Header" HorizontalAlignment="Center" VerticalAlignment="Center" Height="Auto"/>-->
							<TextBlock x:Name="contentPresenter"
									   AutomationProperties.Name="{TemplateBinding Header}"
									   AutomationProperties.AutomationId="{TemplateBinding Name}"
									   Text="{TemplateBinding Header}"
									   Margin="0,-3,0,-1"
									   HorizontalAlignment="Center"
									   VerticalAlignment="Center"
									   Height="Auto" />
						</Border>
						<Grid x:Name="separatorGrid"
							  Visibility="Collapsed"
							  HorizontalAlignment="Right"
							  Width="2"
							  Grid.Column="1">
							<Rectangle x:Name="separatorRectangle1"
									   Fill="{DynamicResource RibbonTopBorderBrush}"
									   Stroke="{DynamicResource RibbonTopBorderBrush}"
									   Margin="0,0,1,0"
									   HorizontalAlignment="Right"
									   Width="1"
									   Opacity="1"
									   Visibility="Visible">
								<Rectangle.OpacityMask>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<GradientStop Color="#00000000"
													  Offset="0" />
										<GradientStop Color="#E5FFFFFF"
													  Offset="0.382" />
									</LinearGradientBrush>
								</Rectangle.OpacityMask>
							</Rectangle>
							<Rectangle x:Name="separatorRectangle2"
									   Fill="{DynamicResource ActiveTabBackgroundBrush}"
									   Stroke="{DynamicResource ActiveTabBackgroundBrush}"
									   HorizontalAlignment="Right"
									   Margin="0"
									   Width="1"
									   Opacity="1"
									   Visibility="Visible">
								<Rectangle.OpacityMask>
									<LinearGradientBrush EndPoint="0.5,1"
														 StartPoint="0.5,0">
										<GradientStop Color="#00000000"
													  Offset="0" />
										<GradientStop Color="#BFFFFFFF"
													  Offset="0.329" />
									</LinearGradientBrush>
								</Rectangle.OpacityMask>
							</Rectangle>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled"
								 Value="False">
							<Setter Property="Opacity"
									TargetName="contentPresenter"
									Value="0.5" />
						</Trigger>
						<!--<Trigger Property="IsKeyboardFocused" Value="True">
              <Setter Property="Visibility" TargetName="focusedGrid" Value="Visible"/>
            </Trigger>-->
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasRightGroupBorder"
										   Value="False" />
								<Condition Property="HasLeftGroupBorder"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness"
									TargetName="border3"
									Value="1,0,0,0" />
							<Setter Property="BorderThickness"
									TargetName="border4"
									Value="1,0,0,0" />
							<Setter Property="Margin"
									TargetName="rectangle4"
									Value="0" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasLeftGroupBorder"
										   Value="False" />
								<Condition Property="HasRightGroupBorder"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness"
									TargetName="border4"
									Value="0,0,1,0" />
							<Setter Property="BorderThickness"
									TargetName="border3"
									Value="0,0,1,0" />
							<Setter Property="Margin"
									TargetName="rectangle4"
									Value="0" />
							<Setter Property="Margin"
									TargetName="border3"
									Value="0,0,0,1" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="HasLeftGroupBorder"
										   Value="False" />
								<Condition Property="HasRightGroupBorder"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderThickness"
									TargetName="border4"
									Value="0,0,0,0" />
							<Setter Property="BorderThickness"
									TargetName="border3"
									Value="0,0,0,0" />
							<Setter Property="Margin"
									TargetName="rectangle4"
									Value="0" />
							<Setter Property="Margin"
									TargetName="border3"
									Value="0,0,0,1" />
						</MultiTrigger>
						<!--<MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="HasLeftGroupBorder"
                                           Value="True" />
                                <Condition Property="HasRightGroupBorder"
                                           Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin"
                                    TargetName="rectangle4"
                                    Value="0" />
                            <Setter Property="BorderThickness"
                                    TargetName="border4"
                                    Value="1,0,1,0" />
                            <Setter Property="BorderThickness"
                                    TargetName="border3"
                                    Value="1,0,1,0" />
                            <Setter Property="Margin"
                                    TargetName="border3"
                                    Value="1,0,0,1" />
                        </MultiTrigger>-->
						<Trigger Property="Group"
								 Value="{x:Null}">
							<Setter Property="Visibility"
									TargetName="border3"
									Value="Collapsed" />
							<Setter Property="Margin"
									TargetName="separatorGrid"
									Value="-1,0,0,1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelected"
										   Value="True" />
								<Condition Property="IsMinimized"
										   Value="False" />
								<Condition Property="Fluent:RibbonTabControl.HighlightSelectedItem"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility"
									TargetName="selectedGrid"
									Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="Selector.IsSelected"
										   Value="False" />
								<Condition Property="IsMinimized"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility"
									TargetName="hoverGrid"
									Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver"
										   Value="True" />
								<Condition Property="IsMinimized"
										   Value="True" />
								<Condition Property="IsOpen"
										   Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility"
									TargetName="hoverGrid"
									Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="Selector.IsSelected"
										   Value="True" />
								<Condition Property="IsMinimized"
										   Value="True" />
								<Condition Property="IsOpen"
										   Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Visibility"
									TargetName="hoverGrid"
									Value="Visible" />
							<Setter Property="Background"
									TargetName="grid"
									Value="#00000000" />
						</MultiTrigger>
						<Trigger Property="IsSeparatorVisible"
								 Value="True">
							<Setter Property="Visibility"
									TargetName="separatorGrid"
									Value="Visible" />
							<Setter Property="Margin"
									TargetName="PART_ContentContainer"
									Value="6,2,6,0" />
							<Setter Property="Margin"
									TargetName="hoverGrid"
									Value="2,0" />
							<Setter Property="Margin"
									TargetName="selectedGrid"
									Value="0,0" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="IsTabStop"
				Value="False" />
		<Setter Property="Indent"
				Value="0" />
		<Setter Property="Foreground"
				Value="{DynamicResource TabItemSelectedFontBrush}" />
		<Setter Property="BorderBrush"
				Value="{Binding Group.BorderBrush, RelativeSource={RelativeSource Self}}" />
		<Setter Property="FocusVisualStyle"
				Value="{DynamicResource ControlStyleEmptyFocus}" />
	</Style>
</ResourceDictionary>